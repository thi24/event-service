name: Deploy events Service

on:
  push:
    branches: [ "main", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      KEYCLOAK_SECRET: ${{ secrets.KEYCLOAK_SECRET }}
      DOCKER_IMAGE_NAME: ghcr.io/thi24/benevolo.event-service
      DOCKER_IMAGE_TAG: ${{ github.sha }}
      CORS_ORIGIN: "https://benevolo.de,https://dev.benevolo.de, https://localhost:3000, https://shop.benevolo.de"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          maven-version: '3.9.6'  # specify Maven version here

      - name: Build jar
        run: mvn package

      - name: Set env variables for prod
        if: github.ref == 'refs/heads/main'
        run: |
          echo "CORS_ORIGIN=https://benevolo.de,https://shop.benevolo.de" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=ghcr.io/thi24/benevolo.event-service" >> $GITHUB_ENV

      - name: Set env variables for dev
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "CORS_ORIGIN=https://benevolo.de,https://shop.benevolo.de,https://localhost:3000" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=ghcr.io/thi24/dev.benevolo.event-service" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_REGISTRY_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build \
          -f src/main/docker/Dockerfile.jvm \
          --build-arg DATABASE_USERNAME=$DATABASE_USERNAME \
          --build-arg DATABASE_PASSWORD=$DATABASE_PASSWORD \
          --build-arg KEYCLOAK_SECRET=$KEYCLOAK_SECRET \
          --build-arg CORS_ORIGIN=$CORS_ORIGIN \
          -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG .

          docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG


  deploymain:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'thi24/gitops'
          ref: 'main'
          token: ${{ secrets.GITOPS }}

      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      - name: Update docker image version
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.42.1/yq_linux_amd64 -O yq &&\
          chmod +x yq
          NEW_VERSION=${{ github.sha }}
          yq e '.services["benevolo.event-service"].image = "ghcr.io/thi24/benevolo.event-service:'"$NEW_VERSION"'"' -i docker-compose.yml

      - name: Commit and push changes
        run: |
          git commit -a -m "updated by GitHub Actions"
          git push



  deploydev:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'thi24/gitops-dev'
          ref: 'main'
          token: ${{ secrets.GITOPS }}

      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      - name: Update docker image version
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.42.1/yq_linux_amd64 -O yq &&\
          chmod +x yq
          NEW_VERSION=${{ github.sha }}
          yq e '.services["dev.benevolo.event-service"].image = "ghcr.io/thi24/dev.benevolo.event-service:'"$NEW_VERSION"'"' -i docker-compose.yml

      - name: Commit and push changes
        run: |
          git commit -a -m "updated by GitHub Actions"
          git push
